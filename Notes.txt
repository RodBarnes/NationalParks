Error
-----
Attempts to build a release of any sort for any API, fails with this error:
Error	NETSDK1147	To build this project, the following workloads must be installed: android
To install these workloads, run the following command: dotnet workload restore	MonkeyFinder	C:\Program Files\dotnet\sdk\7.0.102\Sdks\Microsoft.NET.Sdk\targets\Microsoft.NET.Sdk.ImportWorkloads.targets	38	


Todo & Ideas
------------
Finish Events
Finish Webcams

I attempted to turn CollapsibleView into a user Control but failed because I couldn't figure out how to inject the created VM into the page.  The *DetailVM creates each CollapsibleViewVM it needs and this needs to then be associated with the respective user control (CollapsivleView) instance.  Couldn't get there.  Maybe later.

As above, the *FilterPage.xaml should probably be a single page that is configured (i.e., which filters are available) based upon the name/type of the ListPage from which it was invoked.

Review the whole IsPopulated mechanism and need.  Maybe this isn't needed?  Maybe it should be done differently?

Can I do the same with FilterVM as I did with ImageListVM; i.e., make it a base class instead of a member class?  If this can be done, it has to allow for which filters are available/visible; e.g., States would be for all and be in FilterVM but Topics and Activities would only be in Park?

Event has SiteCode rather than ParkCode.  It appears to be the same so could be used to go to related park?  It also has ParkFullname so maybe that could be used?

Event API uses pageSize (which defaults to 10 and corresponds to limit) and pageNumber (which defaults to 1 and corresponds to start).  But I tried running through tester getting 20 pages at a time and it gets through the first 40 and then poops coming back with a null? Data.

Settings?
	- User determined states by which to always filter?
	- Which list to display as the default page?  Probably would use the CurrentItem property of <Shell>? And update the name of the new item based to that name based upon user selection?

Need a quick search (alphabet thumb?) or some other means of quickly locating a specific Park or Campground.  I could add a search button for now...  Or maybe a search at the top of the list that limits the list as values are entered?  Maybe could use the UserStoppedTypingBehavior from the Maui.Toolkit?

EllipsisLabel control to display an elipsis at the end of too-long-to-display text?  I think this page might have some related guidance: https://swharden.com/blog/2021-10-16-maui-graphics-measurestring/

Need to find phone in midst of text and turn into link to call.  This may be as simple as turning it into HTML text and selecting that as the text type in the label.

Determine how to get an image of the webcam and display that in the webcam list.

Does it make sense to have the Webcams as a separate aspect/list?  Or should the webcams be just part of the ParkDetail?  Or maybe both?

Webcams are not sorted alphbetically by title; unsure what the order is.  And it does not have the 'sort' parameter as found on Parks.

Maybe WebcamImageList doesn't make since.  Most don't have images.  These (there may be others) each have one image:
	Clarno Unit: The Palisades
	Live View From Panther Junction
	Spruce Tree House
	Pine Springs Canyon View
	Dell City View
	El Capitan View
	Bartlett Cove Lagoon and Fairweather Range
	Bartlett Cove Public Dock

Change the splash icon to the AdvApp icon.

Add a tap gesture on the AdvApp section of the About page to go to the AdvApp site?

The parks and campgrounds come in sorted order.  Webcams are not -- at least, no order is determined.

Allow setting radious in miles and presenting list of Parks within that radius.

The NPS API provides for "Parks with Activity", "Parks for Topic", "Parks with Amenity", etc. but not combinations.  The "Parks" supports a query "q" but isn't clear what is the format.

Can I do a swipe gesture to go to a new page?  Thinking of making Hours and Images part of a swipe set of Park like we did with FE Connect.  But in the FE Connect case, they were truly extensions of the same object to collect additional data.

Maybe need a string handler that recognizes URLs in text (e.g., weather descriptions) and turns those into clickable links.

Still unsure what to do with the ExceptionHours and whether to display the StandardHours since they are often (alway?) included as text in the description.

WebCam image model is the same as Park image model but they include two additional properties: Description (which I've never seen filled), and a collection of "crops" which indicate an aspect ratio and the associated URL to view it. For now, I've derived WebCamImage from Image.  But should Image be ParkImage (which would eliminate the ambiguity with System...Image)?

And maybe Activity should be ParkActivity to eliminate the ambiguity with System...Activity?

What about Amenities, Events, Park Places?  Are there others?  Are these just additional pages in the swipe-set planned for the Hours and Images?

What is the best way to handle the string Lat/Long?  Ideally, they'd be private and only expose the double values?

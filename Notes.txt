Status
------
Added CollapsibleText(View/VM) and have it working for WeatherVM in ParkDetail.
Adding it to CampgroundDetail(View/VM) for WeatherVM.  But, for some reason, it displays the view even when the bound propert for IsVisible is false.  I tried using literal True/False and it works fine.
Added CollapsibleList(View/VM) and added it to ActivitiesVM for ParkDetail.
	- It works but haven't figure out how to manage having a different type of DataTemplate.  Can I inject that in some way?
	- If I can conquer this, it probably means I can end up with a single CollapsibleView?
	- I tried using another level of ContentView within the CollapsibleView but that didn't work.
	- But maybe subclassing ContentView and letting the subclass specify the "content"?


Todo & Ideas
------------
Determine how to get a snapshot of the webcam and display that in the webcam list as the image.  Would this help: https://stackoverflow.com/questions/15702031/get-thumbnail-image-of-video-file-in-c-sharp

Add ParkingLots? Should this be a section in ParkDetail?  Should it be its own list with a RelatedParks section?
Add Multimedia? Should this be a section in ParkDetail?  Should it be its own list with a RelatedParks section?
Add Articles? Should this be a section in ParkDetail?  Should it be its own list with a RelatedParks section?

I could add a list of "Related Campgrounds" to Park -- but this would mean getting them as I do with Alerts.  Maybe... What about the ability to go back and forth between things -- Park to Campground to Place to Park.  What does this do to the routing?

Does Community.Toolkit have an HTML label link?

If a filter selection is made and it is lower down in the list it isn't visible when returning to edit the filter.  Should it automatically scroll to the top selected position?  Or...?

I attempted to turn CollapsibleView into a user Control but failed because I couldn't figure out how to inject the created VM into the page.  The *DetailVM creates each CollapsibleViewVM it needs and this needs to then be associated with the respective user control (CollapsivleView) instance.  Couldn't get there.  Maybe later.

Splitting the retrieval of Tour and Place location to another time instead of getting it regardless while populating the list might be helpful.  Location is only needed when either:
	- Tapping [Location] from the detail page -- so it could just be retrieved there if it is missing.
	- Tapping [Closest] from the list page -- so it could just be retrieved there if it is missing.  But this also means getting it not just for those yet to be retrieved but those already in the list.  I tried implenting this and it makes GetClosest for Tours very, very slow.  Whereas, the orignal way (that gets the location when loading the items) takes a little hit per item but really not that much.  Overall, the original seems faster.

Review the whole IsPopulated mechanism and need.  Maybe this isn't needed?  Maybe it should be done differently?

Settings?
	- User determined states by which to always filter?
	- Which list to display as the default page?  Probably would use the CurrentItem property of <Shell>? And update the name of the new item based to that name based upon user selection?

Need a quick search (alphabet thumb?) or some other means of quickly locating a specific Park or Campground.
	- How would this work given the case where not all the items have been retrieved?  And some are not retrieved alphabetically.
	- I could add a search button for now...  Or maybe a search at the top of the list that limits the list as values are entered?  Maybe could use the UserStoppedTypingBehavior from the Maui.Toolkit?

EllipsisLabel control to display an elipsis at the end of too-long-to-display text?  I think this page might have some related guidance: https://swharden.com/blog/2021-10-16-maui-graphics-measurestring/

Need to find phone in midst of text and turn into link to call.  This may be as simple as turning it into HTML text and selecting that as the text type in the label.

Does it make sense to have the Webcams as a separate aspect/list?  Or should the webcams be just part of the ParkDetail?  Or maybe both?

Change the splash icon to the AdvApp icon.

Add a tap gesture on the AdvApp section of the About page to go to the AdvApp site?

Allow setting radious in miles and presenting list of Parks within that radius.

The NPS API provides for "Parks with Activity", "Parks for Topic", "Parks with Amenity", etc. but not combinations.  The "Parks" supports a query "q" but isn't clear what is the format.

Maybe need a string handler that recognizes URLs in text (e.g., weather descriptions) and turns those into clickable links.

Still unsure what to do with the ExceptionHours and whether to display the StandardHours since they are often (alway?) included as text in the description.

And maybe Activity should be NpsActivity to eliminate the ambiguity with System...Activity?

What about Amenities, Events, Park Places?  Are there others?  Are these just additional pages in the swipe-set planned for the Hours and Images?


Failed Ideas
------------
Can I change Related Parks so that it shows an element like Campground when there is a single one and a CollapsibleView when there is more than one.  In fact, are there any that have more than one?
	- This isn't worth it.  There are enough Places and ThingsToDo that have multiple parks that leaving it multiple makes sense for consistency.

Can the x:DataType of the DetailPages be set to just DetailVM?
	- No, because DetailVM does not have a reference to the model that is required by several of the elements.
